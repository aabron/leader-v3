{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\8068programmer\\\\Documents\\\\GitHub\\\\leader-v3\\\\src\\\\components\\\\LeadFinderComp\\\\NameDate.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NameDate = props => {\n  let newDate = new Date();\n  let date = newDate.getDate();\n  let symbol = getSymbol(date);\n  let month = newDate.getMonth() + 1;\n  let actMonth = getActMonth(month);\n  let day = newDate.getDay();\n  let actDay = getActDay(day);\n  let hour = newDate.getHours();\n  let minutes = newDate.getMinutes();\n  function getSymbol(date) {\n    if (date === 1 || date === 21 || date === 31) {\n      return 'st';\n    } else if (date === 2 || date === 22) {\n      return 'nd';\n    } else if (date === 3 || date === 23) {\n      return 'rd';\n    } else {\n      return 'th';\n    }\n  }\n  function getActMonth(val) {\n    let MONTHS = [\"january\", \"february\", \"march\", \"april\", \"may\", \"june\", \"july\", \"august\", \"september\", \"Ootober\", \"november\", \"december\"];\n    return MONTHS[val - 1];\n  }\n  function getActDay(val) {\n    let DAYS = [\"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\"];\n    return DAYS[val];\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-8 flex flex-col w-fit\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-xl bold\",\n      children: \"Hello Aaron\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-gray-400\",\n      children: [actDay + ', ', actMonth, \" \", date, symbol, \" \", hour, \":\", minutes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_c = NameDate;\nexport default NameDate;\nvar _c;\n$RefreshReg$(_c, \"NameDate\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","NameDate","props","newDate","Date","date","getDate","symbol","getSymbol","month","getMonth","actMonth","getActMonth","day","getDay","actDay","getActDay","hour","getHours","minutes","getMinutes","val","MONTHS","DAYS","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/8068programmer/Documents/GitHub/leader-v3/src/components/LeadFinderComp/NameDate.jsx"],"sourcesContent":["import React from 'react'\r\n\r\nconst NameDate = (props) => {\r\n\r\n    let newDate = new Date()\r\n    let date = newDate.getDate();\r\n    let symbol = getSymbol(date)\r\n    let month = newDate.getMonth() + 1;\r\n    let actMonth = getActMonth(month)\r\n    let day = newDate.getDay();\r\n    let actDay = getActDay(day)\r\n    let hour = newDate.getHours();\r\n    let minutes = newDate.getMinutes();\r\n\r\n    function getSymbol(date) {\r\n        if (date === 1 || date === 21 || date === 31) {\r\n            return 'st'\r\n        } else if (date === 2 || date === 22) {\r\n            return 'nd'\r\n        } else if (date === 3 || date === 23) {\r\n            return 'rd'\r\n        } else {\r\n            return 'th'\r\n        }\r\n    }\r\n\r\n    function getActMonth(val) {\r\n        let MONTHS = [\"january\", \"february\", \"march\", \"april\", \"may\", \"june\", \"july\", \"august\", \"september\", \"Ootober\", \"november\", \"december\"]\r\n        return MONTHS[val - 1]\r\n    }\r\n\r\n    function getActDay(val) {\r\n        let DAYS = [\"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\"]\r\n        return DAYS[val]\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='mt-8 flex flex-col w-fit'>\r\n            <div className='text-xl bold'>Hello Aaron</div>\r\n            <div className='text-gray-400'>\r\n                {actDay + ', '}{actMonth} {date}{symbol} {hour}:{minutes}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NameDate"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAExB,IAAIC,OAAO,GAAG,IAAIC,IAAI,EAAE;EACxB,IAAIC,IAAI,GAAGF,OAAO,CAACG,OAAO,EAAE;EAC5B,IAAIC,MAAM,GAAGC,SAAS,CAACH,IAAI,CAAC;EAC5B,IAAII,KAAK,GAAGN,OAAO,CAACO,QAAQ,EAAE,GAAG,CAAC;EAClC,IAAIC,QAAQ,GAAGC,WAAW,CAACH,KAAK,CAAC;EACjC,IAAII,GAAG,GAAGV,OAAO,CAACW,MAAM,EAAE;EAC1B,IAAIC,MAAM,GAAGC,SAAS,CAACH,GAAG,CAAC;EAC3B,IAAII,IAAI,GAAGd,OAAO,CAACe,QAAQ,EAAE;EAC7B,IAAIC,OAAO,GAAGhB,OAAO,CAACiB,UAAU,EAAE;EAElC,SAASZ,SAASA,CAACH,IAAI,EAAE;IACrB,IAAIA,IAAI,KAAK,CAAC,IAAIA,IAAI,KAAK,EAAE,IAAIA,IAAI,KAAK,EAAE,EAAE;MAC1C,OAAO,IAAI;IACf,CAAC,MAAM,IAAIA,IAAI,KAAK,CAAC,IAAIA,IAAI,KAAK,EAAE,EAAE;MAClC,OAAO,IAAI;IACf,CAAC,MAAM,IAAIA,IAAI,KAAK,CAAC,IAAIA,IAAI,KAAK,EAAE,EAAE;MAClC,OAAO,IAAI;IACf,CAAC,MAAM;MACH,OAAO,IAAI;IACf;EACJ;EAEA,SAASO,WAAWA,CAACS,GAAG,EAAE;IACtB,IAAIC,MAAM,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC;IACvI,OAAOA,MAAM,CAACD,GAAG,GAAG,CAAC,CAAC;EAC1B;EAEA,SAASL,SAASA,CAACK,GAAG,EAAE;IACpB,IAAIE,IAAI,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,CAAC;IACzF,OAAOA,IAAI,CAACF,GAAG,CAAC;EACpB;EAGA,oBACIrB,OAAA;IAAKwB,SAAS,EAAC,0BAA0B;IAAAC,QAAA,gBACrCzB,OAAA;MAAKwB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAC/C7B,OAAA;MAAKwB,SAAS,EAAC,eAAe;MAAAC,QAAA,GACzBV,MAAM,GAAG,IAAI,EAAEJ,QAAQ,EAAC,GAAC,EAACN,IAAI,EAAEE,MAAM,EAAC,GAAC,EAACU,IAAI,EAAC,GAAC,EAACE,OAAO;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACtD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEd,CAAC;AAAAC,EAAA,GA3CK7B,QAAQ;AA6Cd,eAAeA,QAAQ;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}