{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isValidIdentifier;\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\nfunction isValidIdentifier(name) {\n  let reserved = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  if (typeof name !== \"string\") return false;\n  if (reserved) {\n    if ((0, _helperValidatorIdentifier.isKeyword)(name) || (0, _helperValidatorIdentifier.isStrictReservedWord)(name, true)) {\n      return false;\n    }\n  }\n  return (0, _helperValidatorIdentifier.isIdentifierName)(name);\n}","map":{"version":3,"names":["_helperValidatorIdentifier","require","isValidIdentifier","name","reserved","arguments","length","undefined","isKeyword","isStrictReservedWord","isIdentifierName"],"sources":["C:\\Users\\8068programmer\\Documents\\GitHub\\leader-v3\\client\\node_modules\\@babel\\types\\src\\validators\\isValidIdentifier.ts"],"sourcesContent":["import {\n  isIdentifierName,\n  isStrictReservedWord,\n  isKeyword,\n} from \"@babel/helper-validator-identifier\";\n\n/**\n * Check if the input `name` is a valid identifier name\n * and isn't a reserved word.\n */\nexport default function isValidIdentifier(\n  name: string,\n  reserved: boolean = true,\n): boolean {\n  if (typeof name !== \"string\") return false;\n\n  if (reserved) {\n    // \"await\" is invalid in module, valid in script; better be safe (see #4952)\n    if (isKeyword(name) || isStrictReservedWord(name, true)) {\n      return false;\n    }\n  }\n\n  return isIdentifierName(name);\n}\n"],"mappings":";;;;;;AAAA,IAAAA,0BAAA,GAAAC,OAAA;AAUe,SAASC,iBAAiBA,CACvCC,IAAY,EAEH;EAAA,IADTC,QAAiB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EAExB,IAAI,OAAOF,IAAI,KAAK,QAAQ,EAAE,OAAO,KAAK;EAE1C,IAAIC,QAAQ,EAAE;IAEZ,IAAI,IAAAJ,0BAAA,CAAAQ,SAAS,EAACL,IAAI,CAAC,IAAI,IAAAH,0BAAA,CAAAS,oBAAoB,EAACN,IAAI,EAAE,IAAI,CAAC,EAAE;MACvD,OAAO,KAAK;IACd;EACF;EAEA,OAAO,IAAAH,0BAAA,CAAAU,gBAAgB,EAACP,IAAI,CAAC;AAC/B"},"metadata":{},"sourceType":"script","externalDependencies":[]}